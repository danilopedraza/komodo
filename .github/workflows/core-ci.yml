name: ci
on:
  pull_request:
  push:
    branches:
      - main

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  test:
    name: test
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        toolchain: [stable]
        target:
          - x86_64-unknown-linux-gnu
          - x86_64-apple-darwin
          - aarch64-apple-darwin
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            cargo-tool: cargo
          - os: macos-13 # intel
            target: x86_64-apple-darwin
            cargo-tool: cargo
          - os: macos-latest # aarch64
            target: aarch64-apple-darwin
            cargo-tool: cargo
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ matrix.toolchain }}
          target: ${{ matrix.target }}

      - name: Run tests
        run: cd core && make test
  
  test-windows:
    runs-on: windows-latest
    timeout-minutes: 10
    strategy:
      fail-fast: false
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          target: x86_64-pc-windows-gnu
      
      - name: Run tests
        uses: msys2/setup-msys2@v2
      - shell: msys2 {0}
        run: |
          pacman --noconfirm diffutils m4 make mingw-w64-x86_64-gcc
          cd core && make test

  format:
    name: format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          components: rustfmt
      
      - name: Check formatting
        working-directory: ./core
        run: make fmt

  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          components: clippy

      - name: Run linter
        working-directory: ./core
        run: make lint
  
#   build:
#     name: build
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v4

#       - name: Install Rust toolchain
#         uses: dtolnay/rust-toolchain@stable
#         with:
#           toolchain: stable
#           components: clippy

#       - name: Build
#         working-directory: ./core
#         run: make build
